name: Build Newifi3 Latest

on:
  push:
    paths:
      - 'config/newifid2.config'
  # schedule:
  #   - cron: '0 0 * * 6'
  workflow_dispatch:

env:
  CONFIG_FILE: config/newifid2.config
  DIY_01: diy/01_resource.sh
  #DIY_01: diy/04_latest.sh
  DIY_02: diy/02_packages.sh
  DIY_03: diy/03_mt7621.sh
  #DIY_03: diy/05_latest_vermagic.sh

jobs:
  compile:
    name: ðŸ“¶ImmortalWRTðŸ“¶
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++ g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig clang python3-distutils rsync file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Ho_Chi_Minh"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      run: |
        df -hT $PWD
        chmod +x $DIY_01
        cd /workdir
        $GITHUB_WORKSPACE/$DIY_01
        ln -sf /workdir/immortalwrt $GITHUB_WORKSPACE/immortalwrt
    
    - name: Prepare packages
      run: |
        chmod +x $DIY_02
        chmod +x $DIY_03
        cd immortalwrt/
        $GITHUB_WORKSPACE/$DIY_02
        $GITHUB_WORKSPACE/$DIY_03
       
    - name: Cache ImmortalWRT
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: true
        toolchain: true
        skip: true
        clean: false
        prefix: ${{ github.workspace }}/immortalwrt

    - name: Load custom config
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE immortalwrt/.config
        cd immortalwrt && make defconfig
    
    - name: Download package
      working-directory: ./immortalwrt
      run: |
        make download -j48
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: Compile the firmware
      working-directory: ./immortalwrt
      id: compile
      run: |
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd immortalwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}