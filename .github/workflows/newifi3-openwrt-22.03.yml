name: Newifi3 - Stable

on:
  schedule:
    - cron: '0 0 * * 6'
  push:
    paths:
      - 'config/newifi3-openwrt-22.03.config'
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: v22.03.3
  CONFIG_FILE: config/newifi3-openwrt-22.03.config
  TZ: UTC

jobs:
  compile:
    name: ðŸ“¶ OpenWRT
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: Preparation
      working-directory: ./openwrt
      run: |
        git clone https://github.com/Azexios/openwrt-r3p-mtk.git
        rsync -av ./openwrt-r3p-mtk/target/ ./target && rsync -av --delete ./openwrt-r3p-mtk/package/mt/ ./package/mt
        git clone https://github.com/NagaseKouichi/luci-app-dnsproxy.git package/luci-app-dnsproxy
        git clone -b luci2 https://github.com/bi7prk/luci-app-xray.git package/luci-app-xray
        ./scripts/feeds update -a && ./scripts/feeds install -a
        sed -i 's/192.168.1.1/192.168.41.1/g' package/base-files/files/bin/config_generate
    
    - name: Load config file
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
    
    - name: Download packages
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc)
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%d-%m-%Y")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Organize files
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::notice file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
    - name: Telegram notification
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        MSG="
        Firmware: Newifi3 - OpenWRT-22.03 - Stable
        Compiled on: ${{ env.FILE_DATE }}
        Download: ${{ steps.wetransfer.outputs.url }}
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}"
