name: Build Orange Pi R1

on:
  push:
    paths:
      - 'config/orangepi-r1.config'
  workflow_dispatch:

env:
  CONFIG_FILE: config/orangepi-r1.config

jobs:
  compile:
    name: ðŸ“¶OrangePi R1ðŸ“¶
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      run: |
        df -hT $PWD
        wget https://github.com/openwrt/openwrt/archive/refs/tags/v23.05.2.tar.gz
        tar -zxf v23.05.2.tar.gz && mv openwrt* openwrt/
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: Apply patches
      working-directory: ./openwrt
      run: |
        wget https://github.com/melsem/opi-zero-cyberwrt/raw/master/patch/All_openwrt-23.05.2.patch
        ./scripts/feeds update -a
        patch -p1 < All_openwrt-23.05.2.patch
        ./scripts/feeds update opicyberwrt
        ./scripts/feeds update diskman
        ./scripts/feeds install -a
        cp -rf "${GITHUB_WORKSPACE}/diy/orangepi-r1/0001-sunxi-add-dts-for-USB-in-OrangePi-R1-expansion-board.patch" ./target/linux/sunxi/patches-5.15/
    
    - name: Load custom config
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
   
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j48
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: Compile the firmware
      working-directory: ./openwrt
      id: compile
      run: |
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWRT_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload to 3rd-party firmware
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        zip -rj orangepir1.zip $FIRMWARE
        curl -sL https://git.io/file-transfer | sh
        ./transfer gg --no-progress ./orangepir1.zip 2>&1 | tee gg.log
        echo "::notice file=transfer.sh::$(cat gg.log | grep https)"
        echo "url=$(cat gg.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
