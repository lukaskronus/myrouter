name: Build Orange Pi R1

on:
  push:
    paths:
      - 'config/orangepi-r1.config'
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: v19.07.10
  CONFIG_FILE: config/orangepi-r1.config

jobs:
  compile:
    name: ðŸ“¶OrangePi R1ðŸ“¶
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget python3-distutils python3-setuptools python3-dev rsync subversion swig time xsltproc zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: Apply patches
      working-directory: ./openwrt
      run: |
        patch -p1 --ignore-whitespace < "${GITHUB_WORKSPACE}/diy/orangepi-r1/Openwrt-19.07.10.patch"
        sed -i '$a src-git opicyberwrt https://github.com/lukaskronus/opi-r1-cyberwrt' feeds.conf.default
        scripts/feeds update -a && scripts/feeds install -a
    
    - name: Cache OpenWRT
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: true
        toolchain: true
        skip: true
        clean: false
        prefix: ${{ github.workspace }}/openwrt
    
    - name: Load custom config
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
    
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j48
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: Compile the firmware
      working-directory: ./openwrt
      id: compile
      run: |
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWRT_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload to 3rd-party firmware
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        zip -rj orangepir1.zip $FIRMWARE
        curl -sL https://git.io/file-transfer | sh
        ./transfer trs --no-progress ./orangepir1.zip 2>&1 | tee trs.log
        echo "::notice file=transfer.sh::$(cat trs.log | grep https)"
        echo "url=$(cat trs.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
