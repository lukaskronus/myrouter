name: Newifi3 - Padavan

on:
  schedule:
    - cron: '0 0 * * 6'
  push:
    paths:
      - 'config/newifi3-padavan.config'
  workflow_dispatch:

env:
  REPO_URL: https://github.com/hadzhioglu/padavan-ng0.git
  REPO_BRANCH: master
  CONFIG_FILE: config/newifi3-padavan.config
  TZ: UTC

jobs:
  compile:
    name: ðŸ“¶ Padavan
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -y install ca-certificates autoconf autoconf-archive automake autopoint bison build-essential cmake cpio curl doxygen fakeroot flex gawk gettext git gperf help2man htop kmod libblkid-dev libc-ares-dev libcurl4-openssl-dev libdevmapper-dev libev-dev libevent-dev libgmp3-dev libkeyutils-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libsqlite3-dev libssl-dev libtool libtool-bin libudev-dev libxml2-dev  locales mc nano pkg-config ppp-dev python3 python3-docutils texinfo unzip uuid uuid-dev vim wget xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH padavan
        ln -sf /workdir/padavan $GITHUB_WORKSPACE/padavan
    
    - name: Compile toolchain
      working-directory: ./padavan/toolchain
      run: |
        ./clean_sources.sh 
        ./build_toolchain.sh 
    
    - name: Load config file
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE padavan/trunk/.config
    
    - name: Build firmware
      id: firmware
      working-directory: ./padavan/trunk
      run: |
        ./clear_tree.sh
        ./build_firmware.sh
        echo "FILE_DATE=$(date +"%d-%m-%Y")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Organize files
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        cd padavan/trunk/images
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      with:
        name: Padavan_firmware_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::notice file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: Telegram notification
      if: steps.firmware.outputs.status == 'success' && !cancelled()
      run: |
        MSG="
        Firmware: Newifi3 - Padavan
        Compiled on: ${{ env.FILE_DATE }}
        Download: ${{ steps.wetransfer.outputs.url }}
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}"